#include <stdio.h>

int _putchar(char c)
{
	return putchar(c);
}

int _islower(int c)
{
	return c >= 'a' && c <= 'z';
}

int _isalpha(int c)
{
	return _islower(c) || _isupper(c);
}

int _abs(int n)
{
	return n < 0 ? -n : n;
}

int _isupper(int c)
{
	return c >= 'A' && c <= 'Z';
}

int _isdigit(int c)
{
	return c >= '0' && c <= '9';
}

int _strlen(char *s)
{
	int len = 0;
	while (*s++)
	{
		len++;
	}
	return len;
}

void _puts(char *s)
{
	while (*s)
	{
		_putchar(*s++);
	}
	_putchar('\n');
}

char *_strcpy(char *dest, char *src)
{
	char *orig_dest = dest;
	while (*src)
	{
		*dest++ = *src++;
	}
	*dest = '\0';
	return orig_dest;
}

int _atoi(char *s)
{
	int result = 0;
	int sign = 1;
	while (*s == ' ' || (*s >= '\t' && *s <= '\r'))
	{
		s++;
	}
	if (*s == '+' || *s == '-')
	{
		if (*s == '-')
		{
			sign = -1;
		}
		s++;
	}
	while (*s >= '0' && *s <= '9')
	{
		result = result * 10 + (*s - '0');
		s++;
	}
	return sign * result;
}

char *_strcat(char *dest, char *src)
{
	char *orig_dest = dest;
	while (*dest)
	{
		dest++;
	}
	while (*src)
	{
        *dest++ = *src++;
	}
	*dest = '\0';
	return orig_dest;
}

char *_strncat(char *dest, char *src, int n)
{
	char *orig_dest = dest;
	while (*dest)
	{
		dest++;
	}
	while (n-- && *src)
	{
		*dest++ = *src++;
	}
	*dest = '\0';
	return orig_dest;
}

char *_strncpy(char *dest, char *src, int n)
{
	char *orig_dest = dest;
	while (n-- && *src)
    {
	    *dest++ = *src++;
    }
	while (n--)
	{
		*dest++ = '\0';
	}
	return orig_dest;
}

int _strcmp(char *s1, char *s2)
{
	while (*s1 && *s2 && *s1 == *s2)
	{
		s1++;
		s2++;
	}
	return *s1 - *s2;
}

char *_memset(char *s, char b, unsigned int n)
{
	char *orig_s = s;
	while (n--)
	{
        *s++ = b;
	}
	return orig_s;
}

char *_memcpy(char *dest, char *src, unsigned int n)
{
	char *orig_dest = dest;
	while (n--)
	{
		*dest++ = *src++;
	}
	return orig_dest;
}

char *_strchr(char *s, char c)
{
	while (*s && *s != c)
	{
		s++;
	}
	return *s == c ? s : NULL;
}

unsigned int _strspn

